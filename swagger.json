{
    "openapi": "3.0.1",
    "info": {
        "version": "1.0.0",
        "title": "URL Monitoring",
        "description": "My URL Monitoring Api"
    },
    "server": {
        "url": "http://localhost:3000/",
        "description": "Local Host"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [{
        "name": "Users",
        "description": " users module"
    }, {
        "name": "Checks",
        "description": "checks module"
    }],
    "schemes": ["http"],
    "security": [{
        "JWT": []
    }],
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string",
                    "example": "Mohamed"
                },
                "secondName": {
                    "type": "string",
                    "example": "Hosny"
                },
                "email": {
                    "type": "string",
                    "example": "mohammedhosny94@hotmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "12345"
                }
            }
        },
        "Check": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "check1"
                },
                "url": {
                    "type": "string",
                    "example": "facebook.com"
                },
                "protocol": {
                    "type": "string",
                    "example": "HTTP"
                },
                "path": {
                    "type": "string",
                    "example": "//"
                },
                "port": {
                    "type": "integer",
                    "example": 80
                },
                "timeOutInSeconds": {
                    "type": "integer",
                    "example": 5
                },
                "threshold": {
                    "type": "integer",
                    "example": 10
                },
                "authentication": {
                    "type": "string",
                    "example": "{'username':'mohammed','password':'12345'}"
                },
                "httpHeaders": {
                    "type": "string",
                    "example": ""
                },
                "assertStatusCode": {
                    "type": "integer",
                    "example": 0
                },
                "ignoreSSL": {
                    "type": "boolean",
                    "example": true
                },
                "tags": {
                    "type": "string",
                    "example": ""
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "JWT": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {},
        "requestBodies": {},
        "responses": {
            "UnauthorizedErrorResponse": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "default": "Unauth"
                                }
                            }
                        }
                    }
                }
            },
            "ForbiddenErrorResponse": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "default": "forbidden."
                                }
                            }
                        }
                    }
                }
            },
            "BadRequestErrorResponse": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "request is invalid"
                                }
                            }
                        }
                    }
                }
            },
            "InternalServerErrorResponse": {
                "description": "Internal Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "something went wrong."
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/users/signup": {
            "post": {
                "tags": ["Users"],
                "description": "Create new user in system",
                "operationId": "Create new user",
                "produces": ["application/json"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["firstName", "secondName","email", "password"],
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "Mohamed"
                                    },
                                    "secondName": {
                                        "type": "string",
                                        "example": "Hosny"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "mohammedhosny94@hotmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "12345"
                                    }
                                }

                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequestErrorResponse"
                    },
                    "200": {
                        "description": "New user is created"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"

                    }
                }
            }
        }, 
        "/users/verifyemail": {
            "post": {
                "tags": ["Users"],
                "summary": "verify ur E-mail",
                "description": "verify E-mail",
                "operationId": "verify",
                "produces": ["application/json"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["email", "code"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "mohammedhosny94@hotmail.com"
                                    },
                                    "code": {
                                        "type": "integer",
                                        "example": 123456
                                    }
                                }

                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "user verified successfuly"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"

                    }
                }
            }
        },
        "/users/signin": {
            "post": {
                "tags": ["Users"],
                "summary": "Logs user into the system",
                "description": "Logs user into the system",
                "operationId": "loginUser",
                "produces": ["application/json"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["email", "password"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "mohammedhosny94@hotmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "12345"
                                    }
                                }

                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Invalid username/password supplied"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"

                    }
                }
            }
        },
        "/users/edit": {
            "post": {
                "tags": ["Users"],
                "summary": "Edit User Profile",
                "description": "Edit User Profile",
                "operationId": "Edit Profile",
                "produces": ["application/json"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["firstName", "secondName", "password"],
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "Mohamed"
                                    },
                                    "secondName": {
                                        "type": "string",
                                        "example": "Hosny"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "12345"
                                    }
                                }

                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedErrorResponse"
                    }

                }
            }
        },
        "/check/create": {
            "post": {
                "tags": [
                    "Checks"
                ],
                "description": "Create new check",
                "operationId": "create new check",
                "produces": ["application/json"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["name", "url", "protocol"],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Check1"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "facebook.com"
                                    },
                                    "protocol": {
                                        "type": "string",
                                        "example": "HTTP"
                                    }
                                }

                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequestErrorResponse"
                    },
                    "200": {
                        "description": "New check is created"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"

                    }
                }
            }
        },
        "/check/edit": {
            "post": {
                "tags": [
                    "Checks"
                ],
                "description": "edit your check",
                "operationId": "edit your check",
                "produces": ["application/json"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["chcekId","name", "url", "protocol"],
                                "properties": {
                                    "checkId":{
                                        "type":"integer",
                                        "example":1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Check1"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "facebook.com"
                                    },
                                    "protocol": {
                                        "type": "string",
                                        "example": "http"
                                    },
                                    "path": {
                                        "type": "string",
                                        "example": "//"
                                    },
                                    "port": {
                                        "type": "integer",
                                        "example": 80
                                    },
                                    "timeOutInSeconds": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "threshold": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "authentication": {
                                        "type": "string",
                                        "example": "{'username':'mohammed','password':'12345'}"
                                    },
                                    "httpHeaders": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "assertStatusCode": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "ignoreSSL": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "tags": {
                                        "type": "string",
                                        "example": ""
                                    }

                                }

                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "$ref": "#/components/responses/BadRequestErrorResponse"
                    },
                    "201": {
                        "description": "check is updated"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"

                    }
                }
            }
        },
        "/check/delete": {
            "post": {
                "tags": [
                    "Checks"
                ],
                "description": "delete check",
                "operationId": "delete check",
                "produces": ["application/json"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["chcekId"],
                                "properties": {
                                    "checkId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }

                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "check not found"
                    },
                    "201": {
                        "description": "Check deleted successfuly"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"

                    }
                }
            }
        },
        "/check/run": {
            "post": {
                "tags": [
                    "Checks"
                ],
                "description": "run your check",
                "operationId": "run check",
                "produces": ["application/json"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["chcekId"],
                                "properties": {
                                    "checkId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }

                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "your check not found"
                    },
                    "200": {
                        "description": "check running"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"

                    }
                }
            }
        },
        "/check/report": {
            "get": {
                "tags": [
                    "Checks"
                ],
                "description": "get report about check",
                "operationId": "report",
                "produces": ["application/json"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["chcekId"],
                                "properties": {
                                    "checkId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }

                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "check not found"
                    },
                    "200": {
                        "description": "check report"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerErrorResponse"

                    }
                }
            }
        }
    }
}